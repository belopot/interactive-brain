function Neuron(a,b,c,d){this.idx=a,this.connection=[],this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0,this.prevReleaseAxon=null,this.signalCount=0,this.signalTimer=0,this.fireRoot=0,THREE.Vector3.call(this,b,c,d)}function Signal(a,b,c){this.minSpeed=b,this.maxSpeed=c,this.speed=THREE.Math.randFloat(this.minSpeed,this.maxSpeed),this.alive=!0,this.t=null,this.startingPoint=null,this.axon=null,this.particle=a.getParticle(),THREE.Vector3.call(this)}function StaticSignal(a,b,c,d,e){this.spriteTextureSignal=TEXTURES.electric,this.pGeom=new THREE.Geometry,this.particles=this.pGeom.vertices,this.pColor=d,this.pSize=4*c,this.particles[0]=new THREE.Vector3(0,0,0),this.meshComponents=new THREE.Object3D,this.meshComponents.visible=a,this.meshComponents.position.set(b.x,b.y,b.z),this.pMat=new THREE.PointCloudMaterial({map:this.spriteTextureSignal,size:this.pSize,color:this.pColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.pMesh=new THREE.PointCloud(this.pGeom,this.pMat),this.pMesh.frustumCulled=!1,this.meshComponents.add(this.pMesh),this.pMat_outer=this.pMat.clone(),this.pMat_outer.size=10*this.pSize,this.pMat_outer.opacity=.1,this.pMesh_outer=new THREE.PointCloud(this.pGeom,this.pMat_outer),this.pMesh_outer.frustumCulled=!1,this.meshComponents.add(this.pMesh_outer),this.interval=e,this.timer=0}function ParticlePool(a,b){this.spriteTextureSignal=TEXTURES.electric,this.poolSize=a,this.pGeom=new THREE.Geometry,this.particles=this.pGeom.vertices,this.offScreenPos=new THREE.Vector3(9999,9999,9999),this.pColor="#ff0000",this.pSize=2*b;for(var c=0;c<this.poolSize;c++)this.particles[c]=new Particle(this);this.meshComponents=new THREE.Object3D,this.pMat=new THREE.PointCloudMaterial({map:this.spriteTextureSignal,size:this.pSize,color:this.pColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.pMesh=new THREE.PointCloud(this.pGeom,this.pMat),this.pMesh.frustumCulled=!1,this.meshComponents.add(this.pMesh),this.pMat_outer=this.pMat.clone(),this.pMat_outer.size=10*this.pSize,this.pMat_outer.opacity=.06,this.pMesh_outer=new THREE.PointCloud(this.pGeom,this.pMat_outer),this.pMesh_outer.frustumCulled=!1,this.meshComponents.add(this.pMesh_outer)}function Particle(a){this.particlePool=a,this.available=!0,THREE.Vector3.call(this,this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)}function Axon(a,b){this.bezierSubdivision=8,this.neuronA=a,this.neuronB=b,this.cpLength=a.distanceTo(b)/THREE.Math.randFloat(1.5,4),this.controlPointA=this.getControlPoint(a,b),this.controlPointB=this.getControlPoint(b,a),THREE.CubicBezierCurve3.call(this,this.neuronA,this.controlPointA,this.controlPointB,this.neuronB),this.vertices=this.getSubdividedVertices()}function Connection(a,b){this.axon=a,this.startingPoint=b}function CommentLabel(a,b){this.div=document.createElement("div"),this.div.style.position="absolute",this.div.innerHTML=a.text,this.div.style.top=-1e3,this.div.style.left=-1e3,this.div.style.color=a.color,this.div.style.visibility=a.visible?"visible":"hidden",this.div.style.fontSize=a.size,this.div.classList.add("comment-label"),this.parent=b,this.position=new THREE.Vector3(0,0,0),container.appendChild(this.div)}function Conbox(a,b,c,d){this.id=a,this.component=new THREE.Object3D,this.component.position.set(b.x,b.y,b.z),this.component.visible=c,this.comment=new CommentLabel(d,this.component)}function NeuralNetwork(){this.initialized=!1,this.settings={verticesSkipStep:4,maxAxonDist:10,maxConnectionsPerNeuron:6,signalMinSpeed:.35,signalMaxSpeed:.85,currentMaxSignals:1e3,limitSignals:3e3},this.meshComponents=new THREE.Object3D,this.particlePools=[];for(var a=0;a<SignalData.length;a++){var b=new ParticlePool(this.settings.limitSignals,SignalData[a].size);this.meshComponents.add(b.meshComponents),this.particlePools.push(b)}this.components={neurons:[],allSignals:[],allAxons:[],allComments:[]},this.axonOpacityMultiplier=.1,this.axonColor="#ffffff",this.axonGeom=new THREE.BufferGeometry,this.axonPositions=[],this.axonIndices=[],this.axonNextPositionsIndex=0,this.axonUniforms={color:{type:"c",value:new THREE.Color(this.axonColor)},opacityMultiplier:{type:"f",value:this.axonOpacityMultiplier}},this.axonAttributes={opacity:{type:"f",value:[]}},this.neuronSizeMultiplier=.4,this.spriteTextureNeuron=TEXTURES.electric,this.neuronColor="#ffffff",this.neuronOpacity=.3,this.neuronsGeom=new THREE.Geometry,this.neuronUniforms={sizeMultiplier:{type:"f",value:this.neuronSizeMultiplier},opacity:{type:"f",value:this.neuronOpacity},texture:{type:"t",value:this.spriteTextureNeuron}},this.neuronAttributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.neuronShaderMaterial=new THREE.ShaderMaterial({uniforms:this.neuronUniforms,attributes:this.neuronAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,transparent:!0,depthTest:!1});var c=new THREE.LineBasicMaterial({color:40879,linewidth:1});this.conboxRoot=new THREE.Object3D;for(var d=new THREE.Geometry,e=[[-contextBoxSize/2,-contextBoxSize/2,-contextBoxSize/2],[contextBoxSize/2,-contextBoxSize/2,-contextBoxSize/2],[contextBoxSize/2,contextBoxSize/2,-contextBoxSize/2],[-contextBoxSize/2,contextBoxSize/2,-contextBoxSize/2],[-contextBoxSize/2,-contextBoxSize/2,contextBoxSize/2],[contextBoxSize/2,-contextBoxSize/2,contextBoxSize/2],[contextBoxSize/2,contextBoxSize/2,contextBoxSize/2],[-contextBoxSize/2,contextBoxSize/2,contextBoxSize/2]],f=[[0,1],[1,2],[2,3],[3,0],[0,4],[4,5],[5,6],[6,7],[7,4],[4,7],[7,3],[3,2],[2,6],[6,5],[5,1]],a=0;a<f.length;a++)d.vertices.push(new THREE.Vector3(e[f[a][0]][0],e[f[a][0]][1],e[f[a][0]][2])),d.vertices.push(new THREE.Vector3(e[f[a][1]][0],e[f[a][1]][1],e[f[a][1]][2]));this.conboxMesh=new THREE.Line(d,c),this.staticSignals=[],this.numNeurons=0,this.numAxons=0,this.numSignals=0,this.numPassive=0,this.initNeuralNetwork()}function updateHelpers(){axisHelper.visible=sceneSettings.enableAxisHelper,gridHelper.visible=sceneSettings.enableGridHelper}function main(){var a=window.neuralNet=new NeuralNetwork;scene.add(a.meshComponents);var b=new THREE.PlaneGeometry(180,180,1),c=new THREE.MeshBasicMaterial({color:16777215,side:THREE.DoubleSide,map:TEXTURES.mark,combine:THREE.AdditiveBlending,transparent:!0,opacity:.1}),d=new THREE.Mesh(b,c);d.rotation.set(-Math.PI/2,0,0),d.position.set(0,-80,0),scene.add(d),initGui(),run()}function initGui(){gui=new dat.GUI,gui.width=270,gui_settings=gui.addFolder("Settings"),gui_settings.add(neuralNet,"neuronSizeMultiplier",0,2).name("Neuron Size"),gui_settings.add(neuralNet,"neuronOpacity",0,1).name("Neuron Opacity"),gui_settings.addColor(neuralNet,"neuronColor").name("Neuron Color"),gui_settings.add(neuralNet,"axonOpacityMultiplier",0,5).name("Axon Opacity"),gui_settings.addColor(neuralNet,"axonColor").name("Axon Color"),gui_settings.addColor(sceneSettings,"bgColor").name("Background"),gui_settings.open();for(var a=0;a<gui_settings.__controllers.length;a++)gui_settings.__controllers[a].onChange(updateNeuralNetworkSettings)}function updateNeuralNetworkSettings(){neuralNet.updateSettings(),neuralNet.settings.signalMinSpeed>neuralNet.settings.signalMaxSpeed&&(neuralNet.settings.signalMaxSpeed=neuralNet.settings.signalMinSpeed,gui_settings.__controllers[3].updateDisplay())}function updateGuiInfo(){}function update(){if(updateHelpers(),!sceneSettings.pause){var a=clock.getDelta();neuralNet.update(a),updateGuiInfo()}}function run(){requestAnimationFrame(run),renderer.setClearColor(sceneSettings.bgColor,1),renderer.clear(),update(),renderer.render(scene,camera),stats.update(),FRAME_COUNT++}function onWindowResize(){WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,camera.aspect=screenRatio,camera.updateProjectionMatrix(),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio)}Neuron.prototype=Object.create(THREE.Vector3.prototype),Neuron.prototype.connectNeuronTo=function(a){var b=this,c=new Axon(b,a);return b.connection.push(new Connection(c,"A")),a.connection.push(new Connection(c,"B")),c},Neuron.prototype.createSignal=function(a,b,c){this.firedCount+=1,this.receivedSignal=!1;for(var d=[],e=0;e<this.connection.length;e++)if(this.connection[e].axon!==this.prevReleaseAxon){var f=new Signal(a,b,c);f.setConnection(this.connection[e]),d.push(f)}return this.signalCount=d.length,d},Neuron.prototype.reset=function(){this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0,this.signalCount=0,this.signalTimer=0},Signal.prototype=Object.create(THREE.Vector3.prototype),Signal.prototype.setConnection=function(a){this.startingPoint=a.startingPoint,this.axon=a.axon,"A"===this.startingPoint?this.t=0:"B"===this.startingPoint&&(this.t=1)},Signal.prototype.travel=function(a){var b;"A"===this.startingPoint?(this.t+=this.speed*a,this.t>=1&&(this.t=1,this.alive=!1,this.axon.neuronA.signalCount--,this.axon.neuronB.receivedSignal=!0,this.axon.neuronB.prevReleaseAxon=this.axon)):"B"===this.startingPoint&&(this.t-=this.speed*a,this.t<=0&&(this.t=0,this.alive=!1,this.axon.neuronB.signalCount--,this.axon.neuronA.receivedSignal=!0,this.axon.neuronA.prevReleaseAxon=this.axon)),b=this.axon.getPoint(this.t),this.particle.set(b.x,b.y,b.z)},StaticSignal.prototype.getAvgExecutionTime=function(){return this.profTime/this.itt},StaticSignal.prototype.getParticle=function(){return this.particles[0]},StaticSignal.prototype.update=function(a){this.timer+=6*a/(this.interval/1e3),this.pMat.size=this.pSize*Math.sin(this.timer),this.pMat_outer.size=10*this.pSize*Math.sin(this.timer),this.pGeom.verticesNeedUpdate=!0},StaticSignal.prototype.updateSettings=function(){this.pMat.color.setStyle(this.pColor),this.pMat.size=this.pSize,this.pMat_outer.color.setStyle(this.pColor),this.pMat_outer.size=10*this.pSize},ParticlePool.prototype.getAvgExecutionTime=function(){return this.profTime/this.itt},ParticlePool.prototype.getParticle=function(){for(var a=0;a<this.poolSize;a++){var b=this.particles[a];if(b.available)return this.lastAvailableIdx=a,b.available=!1,b}return console.error("ParticlePool.prototype.getParticle return null"),null},ParticlePool.prototype.update=function(){this.pGeom.verticesNeedUpdate=!0},ParticlePool.prototype.updateSettings=function(){this.pMat.color.setStyle(this.pColor),this.pMat.size=this.pSize,this.pMat_outer.color.setStyle(this.pColor),this.pMat_outer.size=10*this.pSize},Particle.prototype=Object.create(THREE.Vector3.prototype),Particle.prototype.free=function(){this.available=!0,this.set(this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)},Axon.prototype=Object.create(THREE.CubicBezierCurve3.prototype),Axon.prototype.getSubdividedVertices=function(){return this.getSpacedPoints(this.bezierSubdivision)},Axon.prototype.getControlPoint=function(a,b){var c=(new THREE.Vector3).copy(b).sub(a).normalize(),d=new THREE.Vector3(0,0,1),e=(new THREE.Vector3).crossVectors(d,c).normalize(),f=c.angleTo(d),g=(new THREE.Matrix4).makeRotationAxis(e,f),h=Math.cos(THREE.Math.degToRad(45)),i=THREE.Math.randFloat(h,1),j=THREE.Math.randFloat(0,2*Math.PI),k=Math.sqrt(1-i*i),l=new THREE.Vector3(k*Math.cos(j),k*Math.sin(j),i);return l.multiplyScalar(this.cpLength),l.applyMatrix4(g),l.add(a),l},CommentLabel.prototype.setHTML=function(a){this.div.innerHTML=a},CommentLabel.prototype.setParent=function(a){this.parent=a},CommentLabel.prototype.updatePosition=function(){if(this.parent){var a=new THREE.Vector3(this.parent.position.x,this.parent.position.y+contextBoxSize/2,this.parent.position.z);this.position.copy(a)}var b=this.get2DCoords();this.div.style.left=b.x-this.div.offsetWidth/2+"px",this.div.style.top=b.y-this.div.offsetHeight+"px"},CommentLabel.prototype.get2DCoords=function(){var a=this.position.project(camera);return a.x=(a.x+1)/2*window.innerWidth,a.y=-(a.y-1)/2*window.innerHeight,a},NeuralNetwork.prototype.initNeuralNetwork=function(){this.initNeurons(OBJ_MODELS.brain.geometry.vertices),this.initAxons(),this.initConboxes(),this.neuronShaderMaterial.vertexShader=SHADER_CONTAINER.neuronVert,this.neuronShaderMaterial.fragmentShader=SHADER_CONTAINER.neuronFrag,this.axonShaderMaterial.vertexShader=SHADER_CONTAINER.axonVert,this.axonShaderMaterial.fragmentShader=SHADER_CONTAINER.axonFrag,this.initialized=!0},NeuralNetwork.prototype.initNeurons=function(a){var b;for(b=0;b<a.length;b+=this.settings.verticesSkipStep){var c=a[b],d=new Neuron(b,c.x,c.y,c.z);this.components.neurons.push(d),this.neuronsGeom.vertices.push(d)}for(b=0;b<this.components.neurons.length;b++)this.neuronAttributes.color.value[b]=new THREE.Color("#ffffff"),this.neuronAttributes.size.value[b]=THREE.Math.randFloat(.75,3);this.neuronParticles=new THREE.PointCloud(this.neuronsGeom,this.neuronShaderMaterial),this.meshComponents.add(this.neuronParticles),this.neuronShaderMaterial.needsUpdate=!0},NeuralNetwork.prototype.initAxons=function(){for(var a=this.components.neurons.length,b=0;b<a;b++)for(var c=this.components.neurons[b],d=b+1;d<a;d++){var e=this.components.neurons[d];if(c!==e&&c.distanceTo(e)<this.settings.maxAxonDist&&c.connection.length<this.settings.maxConnectionsPerNeuron&&e.connection.length<this.settings.maxConnectionsPerNeuron){var f=c.connectNeuronTo(e);this.constructAxonArrayBuffer(f)}}renderer.getContext().getExtension("OES_element_index_uint")||console.error("32bit index buffer not supported!");var g=new Uint32Array(this.axonIndices),h=new Float32Array(this.axonPositions),j=new Float32Array(this.axonAttributes.opacity.value);this.axonGeom.addAttribute("index",new THREE.BufferAttribute(g,1)),this.axonGeom.addAttribute("position",new THREE.BufferAttribute(h,3)),this.axonGeom.addAttribute("opacity",new THREE.BufferAttribute(j,1)),this.axonGeom.computeBoundingSphere(),this.axonShaderMaterial=new THREE.ShaderMaterial({uniforms:this.axonUniforms,attributes:this.axonAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.axonMesh=new THREE.Line(this.axonGeom,this.axonShaderMaterial,THREE.LinePieces),this.meshComponents.add(this.axonMesh);var k=0;for(i=0;i<a;i++)this.components.neurons[i].connection[0]||(k+=1)},NeuralNetwork.prototype.initConboxes=function(){for(var a=0;a<DATASET.length;a++){var b=new THREE.Vector3(DATASET[a].x*contextBoxSize-brainSizeX/2+contextBoxSize/2,DATASET[a].y*contextBoxSize-brainSizeY/2+contextBoxSize/2,DATASET[a].z*contextBoxSize-brainSizeZ/2+contextBoxSize/2),c=new Conbox(a,b,DATASET[a].visible,DATASET[a].label),d=this.conboxMesh.clone();c.component.add(d),this.conboxRoot.add(c.component),this.components.allComments.push(c.comment);for(var e=0;e<DATASET[a].signals.length;e++){var f=DATASET[a].signals[e],g=new THREE.Vector3(b.x-contextBoxSize/2+f.position.x*contextBoxSize/100,b.y-contextBoxSize/2+f.position.y*contextBoxSize/100,b.z-contextBoxSize/2+f.position.z*contextBoxSize/100),h=new StaticSignal(f.visible,g,f.size,f.color,f.interval);this.staticSignals.push(h),this.conboxRoot.add(h.meshComponents)}}this.meshComponents.add(this.conboxRoot)},NeuralNetwork.prototype.update=function(a){if(this.initialized){for(var b,b=(Date.now(),0);b<SignalData.length;b++)this.components.neurons[SignalData[b].neuron_id].signalTimer+=a,0===this.components.neurons[SignalData[b].neuron_id].signalCount&&this.components.neurons[SignalData[b].neuron_id].signalTimer>SignalData[b].interval&&(this.components.neurons[SignalData[b].neuron_id].reset(),this.releaseSignalAt(SignalData[b].idx,this.components.neurons[SignalData[b].neuron_id]));for(var c=this.components.allSignals.length-1;c>=0;c--){var d=this.components.allSignals[c];if(d.travel(a),!d.alive){d.particle.free();for(var e=this.components.allSignals.length-1;e>=0;e--)if(d===this.components.allSignals[e]){this.components.allSignals.splice(e,1);break}}}for(var b=0;b<this.components.allComments.length;b++)this.components.allComments[b].updatePosition();for(var b=0;b<this.particlePools.length;b++)this.particlePools[b].update();for(var b=0;b<this.staticSignals.length;b++)this.staticSignals[b].update(a);this.updateInfo()}},NeuralNetwork.prototype.constructAxonArrayBuffer=function(a){this.components.allAxons.push(a);for(var b=a.vertices,c=0;c<b.length;c++){if(this.axonPositions.push(b[c].x,b[c].y,b[c].z),c<b.length-1){var d=this.axonNextPositionsIndex;this.axonIndices.push(d,d+1);var e=THREE.Math.randFloat(.005,.2);this.axonAttributes.opacity.value.push(e,e)}this.axonNextPositionsIndex+=1}},NeuralNetwork.prototype.releaseSignalAt=function(a,b){for(var c=b.createSignal(this.particlePools[a],this.settings.signalMinSpeed,this.settings.signalMaxSpeed),d=0;d<c.length;d++){var e=c[d];this.components.allSignals.push(e)}},NeuralNetwork.prototype.resetAllNeurons=function(){this.numPassive=0;for(var a=0;a<this.components.neurons.length;a++)n=this.components.neurons[a],n.fired||(this.numPassive+=1),n.reset()},NeuralNetwork.prototype.updateInfo=function(){this.numNeurons=this.components.neurons.length,this.numAxons=this.components.allAxons.length,this.numSignals=this.components.allSignals.length},NeuralNetwork.prototype.updateSettings=function(){for(this.neuronUniforms.opacity.value=this.neuronOpacity,i=0;i<this.components.neurons.length;i++)this.neuronAttributes.color.value[i].setStyle(this.neuronColor);for(this.neuronAttributes.color.needsUpdate=!0,this.neuronUniforms.sizeMultiplier.value=this.neuronSizeMultiplier,this.axonUniforms.color.value.set(this.axonColor),this.axonUniforms.opacityMultiplier.value=this.axonOpacityMultiplier,i=0;i<this.particlePools.length;i++)this.particlePools[i].updateSettings()},NeuralNetwork.prototype.testChangOpcAttr=function(){for(var a=this.axonGeom.attributes.opacity.array,b=0;b<a.length;b++)a[b]=THREE.Math.randFloat(0,.5);this.axonGeom.attributes.opacity.needsUpdate=!0};var loadingManager=new THREE.LoadingManager;loadingManager.onLoad=function(){document.getElementById("loading").style.display="none",console.log("Done."),main()},loadingManager.onProgress=function(a,b,c){};var shaderLoader=new THREE.XHRLoader(loadingManager);shaderLoader.setResponseType("text"),shaderLoader.loadMultiple=function(a,b){_.each(b,function(b,c){shaderLoader.load(b,function(b){a[c]=b})})};var SHADER_CONTAINER={};shaderLoader.loadMultiple(SHADER_CONTAINER,{neuronVert:"shaders/neuron.vert",neuronFrag:"shaders/neuron.frag",axonVert:"shaders/axon.vert",axonFrag:"shaders/axon.frag"});var OBJ_MODELS={},OBJloader=new THREE.OBJLoader(loadingManager);OBJloader.load("models/brain_vertex_high.obj",function(a){OBJ_MODELS.brain=a.children[0]});var TEXTURES={},textureLoader=new THREE.TextureLoader(loadingManager);textureLoader.load("sprites/electric.png",function(a){TEXTURES.electric=a}),textureLoader.load("sprites/mark.png",function(a){TEXTURES.mark=a}),Detector.webgl||Detector.addGetWebGLMessage();var container,stats,scene,light,camera,cameraCtrl,renderer,WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,clock=new THREE.Clock,FRAME_COUNT=0,sceneSettings={pause:!1,bgColor:1118483,enableGridHelper:!1,enableAxisHelper:!1};container=document.getElementById("canvas-container"),scene=new THREE.Scene,renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio),renderer.setClearColor(sceneSettings.bgColor,1),renderer.autoClear=!1,container.appendChild(renderer.domElement),stats=new Stats,container.appendChild(stats.domElement),camera=new THREE.PerspectiveCamera(75,screenRatio,.1,1e3),camera.position.set(0,150,0),cameraCtrl=new THREE.OrbitControls(camera,renderer.domElement),cameraCtrl.autoRotate=!1,cameraCtrl.autoRotateSpeed=1,cameraCtrl.enablePan=!1,cameraCtrl.enableRotate=!1;var brainSizeX=125,brainSizeY=115,brainSizeZ=155,contextBoxSize=5,gridHelper=new THREE.GridHelper(brainSizeZ/2,contextBoxSize);gridHelper.setColors(48127,16777215),gridHelper.material.opacity=.05,gridHelper.material.transparent=!0,gridHelper.position.y=-brainSizeY/2,scene.add(gridHelper);var axisHelper=new THREE.AxisHelper(brainSizeZ);axisHelper.position.x=-brainSizeX/2,axisHelper.position.y=-brainSizeY/2,axisHelper.position.z=-brainSizeZ/2,scene.add(axisHelper);var comments=[],gui,gui_info,gui_settings;window.addEventListener("keypress",function(a){switch(a.keyCode){case 32:sceneSettings.pause=!sceneSettings.pause;break;case 65:case 97:sceneSettings.enableGridHelper=!sceneSettings.enableGridHelper;break;case 83:case 115:sceneSettings.enableAxisHelper=!sceneSettings.enableAxisHelper}}),$(function(){var a;$(window).resize(function(){clearTimeout(a),a=setTimeout(function(){onWindowResize()},250)})});var SignalData=[],DATASET=[{id:0,x:12,y:22,z:15,visible:!1,label:{visible:!0,text:"Top_Box",size:"18px",color:"#ff00ffff"},signals:[{visible:!0,position:{x:10,y:22,z:10},interval:4e3,color:"#ff0000",size:1}]},{id:1,x:12,y:5,z:15,visible:!1,label:{visible:!0,text:"Bottom_Box",size:"18px",color:"#ff0000ff"},signals:[{visible:!0,position:{x:10,y:22,z:10},interval:2e3,color:"#00ff00",size:1.2},{visible:!0,position:{x:88,y:88,z:88},interval:3e3,color:"#0000ff",size:1}]},{id:2,x:2,y:11,z:15,visible:!0,label:{visible:!0,text:"Right_Box",size:"18px",color:"#ffff00ff"},signals:[{visible:!0,position:{x:88,y:88,z:88},interval:1500,color:"#ff00ff",size:1},{visible:!0,position:{x:44,y:44,z:44},interval:2500,color:"#ff0000",size:1.5}]},{id:3,x:22,y:11,z:15,visible:!0,label:{visible:!0,text:"Left_Box",size:"18px",color:"#00ffffee"},signals:[{visible:!0,position:{x:10,y:22,z:10},interval:5e3,color:"#ddff22",size:1}]},{id:4,x:12,y:11,z:0,visible:!0,label:{visible:!0,text:"Back_Box",size:"18px",color:"#ffffffee"},signals:[{visible:!0,position:{x:10,y:22,z:10},interval:3500,color:"#00ffff",size:1}]},{id:5,x:12,y:11,z:28,visible:!0,label:{visible:!0,text:"Front_Box",size:"18px",color:"#ffffffee"},signals:[{visible:!0,position:{x:10,y:22,z:10},interval:3500,color:"#00ffff",size:1}]}];